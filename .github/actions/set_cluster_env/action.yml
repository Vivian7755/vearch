name: "Cluster environment setup"

description: "Common steps for environment setup, dependency installation, and compilation"

inputs:
  build-type:
    description: "The type of build to perform"
    required: true
    default: "github"
runs:
  using: "composite"
  steps:
  - name: Set up QEMU
    if: matrix.platform == 'arm64'
    uses: docker/setup-qemu-action@v3

  - name: Set up Docker Buildx
    if: matrix.platform == 'arm64'
    uses: docker/setup-buildx-action@v3

  - name: Compile and Build
    shell: bash
    run: |
      cd cloud
      docker run --name vearch-dev ${{ matrix.docker-arch }} --privileged -i -v $(dirname "$PWD"):/vearch vearch/vearch-dev-env:latest /vearch/cloud/compile/compile.sh
      cp -r ../build/bin compile/; cp -r ../build/lib compile/
      docker build ${{ matrix.docker-arch }} -t vearch/vearch:latest .
      cp ../config/config_cluster.toml .
      sed -i 's/resource_limit_rate = 0.85/resource_limit_rate = 0.98/' config_cluster.toml
      if [ "${{ matrix.docker-arch }}" == "--platform linux/arm64" ]; then
        echo "    rpc_timeout = 500" >> config_cluster.toml
      fi
      cat config_cluster.toml
      docker rm vearch-dev
      docker rmi vearch/vearch-dev-env:latest

  - name: Run docker-compose
    uses: hoverkraft-tech/compose-action@v2.0.1
    with:
      compose-file: "cloud/docker-compose.yml"
      up-flags: "-d"
      compose-flags: "--profile cluster"

  - name: Set up Python
    uses: actions/setup-python@v5
    with:
      python-version: "3.10"
      
  - name: Install Dependency
    shell: bash
    run: |
      python -m pip install --upgrade pip setuptools wheel
      pip install requests pytest wheel pandas numpy minio h5py pyyaml psutil
